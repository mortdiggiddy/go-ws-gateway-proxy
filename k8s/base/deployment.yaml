apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-ws-gateway-proxy
spec:
  replicas: 2
  selector:
    matchLabels:
      app: go-ws-gateway-proxy
  template:
    metadata:
      labels:
        app: go-ws-gateway-proxy
    spec:
      terminationGracePeriodSeconds: 60 # wait up to 60s for preStop, must be > (GRACEFUL_DRAIN_TIMEOUT_SECONDS + 5)
      containers:
        - name: proxy
          image: mortdiggiddy/go-ws-gateway-proxy:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
              name: http
          envFrom:
            - configMapRef:
                name: go-ws-gateway-proxy-config
            - secretRef:
                name: go-ws-gateway-proxy-secrets
          args:
            - "--route-file=/etc/ws-gw/routes.yaml"
          volumeMounts:
            - name: route-config
              mountPath: /etc/ws-gw
              readOnly: true
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 2
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 15
            periodSeconds: 20
            timeoutSeconds: 5
          lifecycle:
            preStop: # runs before the SIGKILL timer starts, K8s runs the preStop hook before it sends SIGTERM to PID 1
              exec:
                command:
                  - /bin/sh
                  - -c
                  - |
                    kill -SIGTERM 1
                    echo "Draining connections for ${GRACEFUL_DRAIN_TIMEOUT_SECONDS}s"
                    sleep ${GRACEFUL_DRAIN_TIMEOUT_SECONDS}
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 512Mi
      volumes:
        - name: route-config
          configMap:
            name: ws-gateway-routes
